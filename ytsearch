#!/bin/bash

set -e -o pipefail

query="$*"
if [[ -z "${query}" ]]; then
    read -erp "Enter your YouTube search query: " query
fi

terminal_lines="${LINES}"
if [[ -z "${terminal_lines}" ]]; then
    terminal_lines=$(stty size | cut -d ' ' -f 1)
fi
if [[ -z "${terminal_lines}" ]]; then
    terminal_lines=41 # guaranteed to work on my system ;-)
fi

batch=()
per_page=$((terminal_lines - 6))
offset=0
last_offset=0
selection=""
more_results_msg="[m] More results"
quit_msg="[q] Quit"

echo -e "Searching YouTube for: \"${query}\"\n"

while true; do
    if [[ ${#batch[@]} -eq 0 || ${offset} -ne ${last_offset} ]]; then
        # Fetch results
        mapfile -t batch < <(yt-dlp "ytsearch$((offset + per_page)):${query}" \
            --flat-playlist \
            --print "%(title)s|||%(id)s" 2>/dev/null)
        last_offset="${offset}"
        batch=("${batch[@]:${offset}}")
    fi

    if [[ ${#batch[@]} -eq 0 ]]; then
        echo "No more results."
        break
    fi

    titles=()
    ids=()
    for line in "${batch[@]}"; do
        title="${line%%|||*}"
        id="${line##*|||}"
        titles+=("${title}")
        ids+=("${id}")
    done

    result_list=()
    for ((i = 0; i < ${#titles[@]}; i++)); do
        result_list+=("$((i + 1)). ${titles[${i}]}")
    done
    result_list+=("${more_results_msg}")
    result_list+=("${quit_msg}")

    selection=$(printf "%s\n" "${result_list[@]}" | fzf --border --ansi)

    if [[ "${selection}" == "${quit_msg}" ]]; then
        break
    elif [[ "${selection}" == "${more_results_msg}" ]]; then
        offset=$((offset + per_page))
        continue
    fi

    if [[ "${selection}" =~ ^([0-9]+)\. ]]; then
        index="${BASH_REMATCH[1]}"
        video_id="${ids[$((index - 1))]}"
    else
        echo "Invalid selection."
        continue
    fi

    url="https://www.youtube.com/watch?v=${video_id}"
    smplayer -fullscreen -close-at-end "${url}"
done
